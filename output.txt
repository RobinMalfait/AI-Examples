
====================
| Hoofdstuk 2 - A* |
====================

From: Arad - To: Bucharest
--------------------------
Arad(0 + 366) = 366
Sibiu(140 + 253) = 393
Arad is al geexpandeerd
Rimnicu Vilcea(220 + 193) = 413
Sibiu is al geexpandeerd
Fagaras(239 + 176) = 415
Sibiu is al geexpandeerd
Pitesti(317 + 100) = 417
Rimnicu Vilcea is al geexpandeerd

Closed list:
┌──────┬───────┬────────────────┬─────────┬─────────┬───────────┐
│ Arad │ Sibiu │ Rimnicu Vilcea │ Fagaras │ Pitesti │ Bucharest │
└──────┴───────┴────────────────┴─────────┴─────────┴───────────┘

Path:
┌──────┬───────┬────────────────┬─────────┬───────────┐
│ Arad > Sibiu > Rimnicu Vilcea > Pitesti > Bucharest │
└──────┴───────┴────────────────┴─────────┴───────────┘

=====================================
| Hoofdstuk 2 - Uniform Cost Search |
=====================================

From: Arad - To: Bucharest
--------------------------
Arad(0) = 0
Zerind(0) = 0
Arad is al geexpandeerd
Sibiu(0) = 0
Arad is al geexpandeerd
Timisoara(0) = 0
Arad is al geexpandeerd
Oradea(0) = 0
Zerind is al geexpandeerd
Sibiu is al geexpandeerd
Rimnicu Vilcea(0) = 0
Sibiu is al geexpandeerd
Fagaras(0) = 0
Sibiu is al geexpandeerd
Lugoj(0) = 0
Timisoara is al geexpandeerd
Pitesti(0) = 0
Rimnicu Vilcea is al geexpandeerd
Craiova(0) = 0
Rimnicu Vilcea is al geexpandeerd
Pitesti is al geexpandeerd

Closed list:
┌──────┬────────┬───────┬───────────┬────────┬────────────────┬─────────┬───────┬─────────┬─────────┬───────────┐
│ Arad │ Zerind │ Sibiu │ Timisoara │ Oradea │ Rimnicu Vilcea │ Fagaras │ Lugoj │ Pitesti │ Craiova │ Bucharest │
└──────┴────────┴───────┴───────────┴────────┴────────────────┴─────────┴───────┴─────────┴─────────┴───────────┘

Path:
┌──────┬───────┬────────────────┬─────────┬───────────┐
│ Arad > Sibiu > Rimnicu Vilcea > Pitesti > Bucharest │
└──────┴───────┴────────────────┴─────────┴───────────┘

====================================
| Hoofdstuk 2 - Gulzig Beste Eerst |
====================================

From: Arad - To: Bucharest
--------------------------
Arad(366) = 366
Sibiu(253) = 253
Arad is al geexpandeerd
Fagaras(176) = 176
Sibiu is al geexpandeerd

Closed list:
┌──────┬───────┬─────────┬───────────┐
│ Arad │ Sibiu │ Fagaras │ Bucharest │
└──────┴───────┴─────────┴───────────┘

Path:
┌──────┬───────┬─────────┬───────────┐
│ Arad > Sibiu > Fagaras > Bucharest │
└──────┴───────┴─────────┴───────────┘

=========================
| Hoofdstuk 3 - Minimax |
=========================

The board looks like this:
┌────┬───┬───┐
│ 12 │ 3 │ 8 │
├────┼───┼───┤
│ 1  │ 5 │ 7 │
├────┼───┼───┤
│ 14 │ 5 │ 1 │
└────┴───┴───┘

Your best value is: 
┌───┐
│ 3 │
└───┘

====================================
| Hoofdstuk 3 - alpha-beta-snoeien |
====================================

The board looks like this:
┌───────────┬───────────┐
│ 2,3       │ 5,7       │
├───────────┼───────────┤
│ -2,0      │ 1,10      │
├───────────┼───────────┤
│ 2,1       │ 5,7       │
└───────────┴───────────┘

Your best value is: 
┌───┐
│ 3 │
└───┘

==================================
| Hoofdstuk 4 - Gradient Descent |
==================================

┌────────┬────────┬────────┐
│ x1     │ x2     │ h(...) │
├────────┼────────┼────────┤
│ 1      │ 1      │ 3      │
├────────┼────────┼────────┤
│ 0.8    │ 0.6    │ 1.36   │
├────────┼────────┼────────┤
│ 0.64   │ 0.36   │ 0.6688 │
├────────┼────────┼────────┤
│ 0.512  │ 0.216  │ 0.3555 │
├────────┼────────┼────────┤
│ 0.4096 │ 0.1296 │ 0.2014 │
├────────┼────────┼────────┤
│ 0.3277 │ 0.0778 │ 0.1195 │
├────────┼────────┼────────┤
│ 0.2621 │ 0.0467 │ 0.0731 │
├────────┼────────┼────────┤
│ 0.2097 │ 0.028  │ 0.0455 │
├────────┼────────┼────────┤
│ 0.1678 │ 0.0168 │ 0.0287 │
├────────┼────────┼────────┤
│ 0.1342 │ 0.0101 │ 0.0182 │
└────────┴────────┴────────┘

=================================
| Hoofdstuk 4 - Fitness Functie |
=================================

┌─────────────────────┬────────┬───┬─────────┐
│                     │ binary │ = │ fitness │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0000   │ = │ 0       │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0001   │ = │ 14      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0010   │ = │ 26      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0011   │ = │ 36      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0100   │ = │ 44      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0101   │ = │ 50      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0110   │ = │ 54      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 0111   │ = │ 56      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1000   │ = │ 56      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1001   │ = │ 54      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1010   │ = │ 50      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1011   │ = │ 44      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1100   │ = │ 36      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1101   │ = │ 26      │
├─────────────────────┼────────┼───┼─────────┤
│ Fitness function of │ 1110   │ = │ 14      │
└─────────────────────┴────────┴───┴─────────┘

===============================
| Hoofdstuk 4 - Fitness Ratio |
===============================

┌────────────┬────────┬──────────────────┬────────┬─────────┬───────────┐
│            │ chance │                  │ binary │ fitness │           │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 0.00%  │ chance that item │ 0000   │ (0)     │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 2.50%  │ chance that item │ 0001   │ (14)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 4.64%  │ chance that item │ 0010   │ (26)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 6.43%  │ chance that item │ 0011   │ (36)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 7.86%  │ chance that item │ 0100   │ (44)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 8.93%  │ chance that item │ 0101   │ (50)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 9.64%  │ chance that item │ 0110   │ (54)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 10.00% │ chance that item │ 0111   │ (56)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 10.00% │ chance that item │ 1000   │ (56)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 9.64%  │ chance that item │ 1001   │ (54)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 8.93%  │ chance that item │ 1010   │ (50)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 7.86%  │ chance that item │ 1011   │ (44)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 6.43%  │ chance that item │ 1100   │ (36)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 4.64%  │ chance that item │ 1101   │ (26)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 2.50%  │ chance that item │ 1110   │ (14)    │ is chosen │
├────────────┼────────┼──────────────────┼────────┼─────────┼───────────┤
│ There is a │ 0.00%  │ chance that item │ 1111   │ (0)     │ is chosen │
└────────────┴────────┴──────────────────┴────────┴─────────┴───────────┘

=========================================
| Hoofdstuk 4 - Roulette Wiel Selection |
=========================================

┌────┬────┬────┬────┬────┬────┐
│ 36 │ 44 │ 14 │ 14 │ 56 │ 54 │
└────┴────┴────┴────┴────┴────┘

Totale waarde voor de fitness wordt gegeven door:
36 + 44 + 14 + 14 + 56 + 54 = 218

Fitness ratio bepalen
┌───────┬───────┬──────┬──────┬───────┬───────┐
│ 16.5% │ 20.2% │ 6.4% │ 6.4% │ 25.7% │ 24.8% │
└───────┴───────┴──────┴──────┴───────┴───────┘

=========================================
| Hoofdstuk 4 - Recombinatie en Mutatie |
=========================================

1. éénpunts crossover
[1100, 0100] => [1100, 0100]
[0001, 1110] => [0000, 1111]
[0111, 1001] => [0101, 1011]

===================================================
| Hoofdstuk 5 - Gemiddelde Kwadratische Afwijking |
===================================================

0.3333333333333333

==========================
| Hoofdstuk 5 - Precisie |
==========================

0.2

========================
| Hoofdstuk 5 - Recall |
========================

0.2

=========================
| Hoofdstuk 5 - F-SCORE |
=========================

Precisie = 0.9090909090909091
Recall   = 1
F-SCORE  = 0.9523809523809523
Opmerking 5.14 Pagina 8
-----------------------
┌─────────────┬──────────┬────────┬─────────┐
│ Algorithm   │ Precisie │ Rappel │ F-score │
├─────────────┼──────────┼────────┼─────────┤
│ Algorithm 1 │ 0.500    │ 0.400  │ 0.444   │
├─────────────┼──────────┼────────┼─────────┤
│ Algorithm 2 │ 0.700    │ 0.100  │ 0.175   │
├─────────────┼──────────┼────────┼─────────┤
│ Algorithm 3 │ 0.020    │ 1.000  │ 0.039   │
└─────────────┴──────────┴────────┴─────────┘

=============================
| Hoofdstuk 6 - Kostfunctie |
=============================

Voorbeeld 1
-----------

Theta0 = -0.4
Theta1 = 1
Heuristiek = -0.4 + 1x

Kost 0.7555

Voorbeeld 2
-----------

Theta0 = 0.785
Theta1 = 0.425
Heuristiek = 0.785 + 0.425x

Kost 0.2791


==================================
| Hoofdstuk 6 - Sigmoid function |
==================================

Input 0.123
Sigmoid 0.5307112905000478

=============================
| Hoofdstuk 6 - Stapfunctie |
=============================

Input: 0.12 - Stap function: 1
Input: -0.35 - Stap function: 0
Input: 8.00 - Stap function: 1
Input: 1.20 - Stap function: 1
Input: -1.30 - Stap function: 0
Input: 0.99 - Stap function: 1

==============================
| Hoofdstuk 6 - één-vs-allen |
==============================

h(0.8, 2) = g(3.83 x 1 + -4.29 x 0.8 + 0.27 x 2) = g(0.94)
g(0.94) = 0.7187
Er is 71.87% kans dat (0.8, 2) tot deze klasse behoort.

========================================
| Hoofdstuk 6 - Voorwaartse Propagatie |
========================================

De invoer ziet er als volgt uit:
┌──────┬─────┐
│ 0.05 │ 0.1 │
└──────┴─────┘

De verwachte waarde (y) ziet er als volgt uit:
┌───┬───┐
│ 0 │ 1 │
└───┴───┘

De thetas voor invoer -> verborgen laag zien er als volgt uit:
┌──────┬──────┬─────┐
│ 0.35 │ 0.15 │ 0.2 │
├──────┼──────┼─────┤
│ 0.35 │ 0.25 │ 0.3 │
└──────┴──────┴─────┘

De thetas voor de verborgen -> uitvoer laag zien er als volgt uit:
┌─────┬─────┬──────┐
│ 0.6 │ 0.4 │ 0.45 │
├─────┼─────┼──────┤
│ 0.6 │ 0.5 │ 0.55 │
└─────┴─────┴──────┘

-- voorwaartse propagatie --
----------------------------

--------------
| Iteratie 1 |
--------------

 1. We voegen de bias toe aan de input:
┌───┬──────┬─────┐
│ 1 │ 0.05 │ 0.1 │
└───┴──────┴─────┘

 2. We berekenen z (matrix vector product):
┌────────┬─────────────────────┐
│ 0.3775 │ 0.39249999999999996 │
└────────┴─────────────────────┘

 3. We berekenen g voor elke waarde in z:
┌────────────────────┬───────────────────┐
│ 0.5932699921071872 │ 0.596884378259767 │
└────────────────────┴───────────────────┘

--------------
| Iteratie 2 |
--------------

 1. We voegen de bias toe aan de input:
┌───┬────────────────────┬───────────────────┐
│ 1 │ 0.5932699921071872 │ 0.596884378259767 │
└───┴────────────────────┴───────────────────┘

 2. We berekenen z (matrix vector product):
┌────────────────────┬────────────────────┐
│ 1.1059059670597702 │ 1.2249214040964653 │
└────────────────────┴────────────────────┘

 3. We berekenen g voor elke waarde in z:
┌────────────────────┬────────────────────┐
│ 0.7513650695523157 │ 0.7729284653214625 │
└────────────────────┴────────────────────┘

Nu kunnen we de uitvoer (a^(3)) vergelijken met de gewenste uitvoer (y).
De kost is:
┌────────────────────┐
│ 1.6493383774419013 │
└────────────────────┘

======================================
| Hoofdstuk 6 - Neural Network (XOR) |
======================================

Input:
┌───┬───┐
│ 0 │ 0 │
├───┼───┤
│ 0 │ 1 │
├───┼───┤
│ 1 │ 0 │
├───┼───┤
│ 1 │ 1 │
└───┴───┘

Perceptrons:
┌────┬────┬────┐
│ -1 │ 2  │ 2  │
├────┼────┼────┤
│ 3  │ -2 │ -2 │
├────┼────┼────┤
│ -3 │ 2  │ 2  │
└────┴────┴────┘

1. Add bias to input variables
┌───┬───┬───┐
│ 1 │ 0 │ 0 │
├───┼───┼───┤
│ 1 │ 0 │ 1 │
├───┼───┼───┤
│ 1 │ 1 │ 0 │
├───┼───┼───┤
│ 1 │ 1 │ 1 │
└───┴───┴───┘

2. Calculate Each Perceptron
┌────┬────┬──────────────────┬────────┐
│ X1 │ X2 │ -1 + 2*X1 + 2*X2 │ h(...) │
├────┼────┼──────────────────┼────────┤
│ 0  │ 0  │ -1               │ 0      │
├────┼────┼──────────────────┼────────┤
│ 0  │ 1  │ 1                │ 1      │
├────┼────┼──────────────────┼────────┤
│ 1  │ 0  │ 1                │ 1      │
├────┼────┼──────────────────┼────────┤
│ 1  │ 1  │ 3                │ 1      │
└────┴────┴──────────────────┴────────┘
┌────┬────┬───────────────────┬────────┐
│ X1 │ X2 │ 3 + -2*X1 + -2*X2 │ h(...) │
├────┼────┼───────────────────┼────────┤
│ 0  │ 0  │ 3                 │ 1      │
├────┼────┼───────────────────┼────────┤
│ 0  │ 1  │ 1                 │ 1      │
├────┼────┼───────────────────┼────────┤
│ 1  │ 0  │ 1                 │ 1      │
├────┼────┼───────────────────┼────────┤
│ 1  │ 1  │ -1                │ 0      │
└────┴────┴───────────────────┴────────┘
┌────┬────┬──────────────────┬────────┐
│ X1 │ X2 │ -3 + 2*X1 + 2*X2 │ h(...) │
├────┼────┼──────────────────┼────────┤
│ 0  │ 0  │ -3               │ 0      │
├────┼────┼──────────────────┼────────┤
│ 0  │ 1  │ -1               │ 0      │
├────┼────┼──────────────────┼────────┤
│ 1  │ 0  │ -1               │ 0      │
├────┼────┼──────────────────┼────────┤
│ 1  │ 1  │ 1                │ 1      │
└────┴────┴──────────────────┴────────┘

3. Perceptrons laten samenwerken
┌────┬────┬────┬──────┬───────────────┐
│ X1 │ X2 │ OR │ NAND │ AND(OR, NAND) │
├────┼────┼────┼──────┼───────────────┤
│ 0  │ 0  │ 0  │ 1    │ 0             │
├────┼────┼────┼──────┼───────────────┤
│ 0  │ 1  │ 1  │ 1    │ 1             │
├────┼────┼────┼──────┼───────────────┤
│ 1  │ 0  │ 1  │ 1    │ 1             │
├────┼────┼────┼──────┼───────────────┤
│ 1  │ 1  │ 1  │ 0    │ 0             │
└────┴────┴────┴──────┴───────────────┘
